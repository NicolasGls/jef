{"version":3,"sources":["jef.es6"],"names":[],"mappings":"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","file":"jef.es6","sourcesContent":["\"use strict\";\n\nclass JEF {\n    constructor(viewSelector) {\n\n        this.serv = {}\n        this.serv.viewSelector = viewSelector,\n            this.serv.viewHTMLElement = document.querySelector(this.serv.viewSelector),\n            this.serv.viewportWidth = this.getViewportSize().width,\n            this.serv.viewportHeight = this.getViewportSize().height,\n\n            this.modules = {},\n            this.controllers = {},\n            this.extensions = {},\n            this.broadcast = {};\n\n        // get view attr value\n        this.serv.viewSeletorString = this.serv.viewSelector.replace('[', '');\n        this.serv.viewSeletorString = this.serv.viewSeletorString.replace(']', '');\n\n        // expose for API\n        window.__JEF__ = {\n            view : viewSelector,\n            instance : this\n        };\n\n    }\n\n    addExtension(extension) {\n\n        // Conventionally, JEF extensions are prefixed with \"jef_\".\n        // This part is removed for something cleaner\n        let functionName = String('jef_' + extension);\n\n        // If the extension does not exist in the current instance of JEF,\n        // it is added\n        if(!this.extensions.hasOwnProperty(extension)) {\n            this.extensions[extension] = window[functionName];\n            this[extension] = window[functionName];\n        }\n    }\n\n    module(moduleName, functionRef) {\n\n        let reload = true,\n            options;\n\n        // If the first parameter is an object\n        // this means that it customizes the module\n        // The only customization available for the moment is\n        // the ability to not restart the module during an ajax treatment\n        if(typeof moduleName === 'object') {\n            options = moduleName;\n            moduleName = options.name;\n            functionRef = options.action;\n            reload = options.hasOwnProperty('reload') ? options.reload : reload;\n        }\n\n        // if the module does not exist\n        if(!this.modules.hasOwnProperty(moduleName)) {\n\n            // added to our instance of JEF\n            this.modules[moduleName] = functionRef;\n\n            // Here we define the behavior of the module facing a reloading ajax\n            this.modules[moduleName].reload = reload;\n\n            // the module is performed on load page\n            document.addEventListener('onload', this.modules[moduleName](), false);\n        } else {\n\n            // else if the module exist\n            try {\n\n                // we try to launch it on load page\n                document.addEventListener('onload', this.modules[moduleName](), false);\n            } catch(e) {\n                console.log('[Jef] You probably have two modules of the same name:\\n' + e);\n            }\n        }\n    }\n\n    controller(controllerName, functionRef) {\n\n        // if the controller does not exist\n        if(!this.controllers.hasOwnProperty(controllerName)) {\n\n            // added to our instance of JEF\n            this.controllers[controllerName] = functionRef;\n\n            // If this controller correspond to the current view\n            if(String(this.serv.viewHTMLElement.getAttribute(this.serv.viewSeletorString)) === String(controllerName)) {\n\n                // the controller is performed on load page\n                document.addEventListener('onload', this.controllers[controllerName](), false);\n\n            }\n        } else {\n\n            // else if the controller exist and if it correponding to the current view\n            if(String(this.serv.viewHTMLElement.getAttribute(this.serv.viewSeletorString)) === String(controllerName)) {\n\n                // we try to launch it on load page\n                try {\n                    document.addEventListener('onload', this.controllers[controllerName](), false);\n                } catch(e) {\n                    console.log('[Jef] You probably have two controllers of the same name:\\n' + e);\n                }\n            }\n        }\n    }\n\n    init() {\n\n        // the method \"init\" allows to revive\n        // controllers & modules eg in case of ajax call\n        let module,\n            controller,\n            i = 0;\n\n        // We recovery all the modules\n        for(module in this.modules) {\n            if(this.modules.hasOwnProperty(module)) {\n                if(this.modules[module].reload) this.modules[module]();\n            }\n        }\n\n        // We recovery all controllers linked to the current view\n        for(controller in this.controllers) {\n            if(this.controllers.hasOwnProperty(controller)) {\n                try {\n                    if(String(this.serv.viewHTMLElement.getAttribute(this.serv.viewSeletorString)) === String(Object.keys(this.controllers)[i])) {\n                        this.controllers[controller]();\n                    }\n                } catch(e) {\n                    console.log('[Jef] The view is not defined:\\n' + e);\n                }\n            }\n            i++;\n        }\n    }\n\n    getViewportSize() {\n        return {\n            width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n            height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n        };\n    }\n}\n"]}